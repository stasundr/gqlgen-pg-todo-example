package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"

	"github.com/stasundr/gqlgen-pg-todo-example/graph/model"
)

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id int) (*model.User, error) {
	user := model.User{ID: id}

	if err := r.DB.NewSelect().Model(&user).Scan(context.Background()); err != nil {
		return nil, err
	}

	return &user, nil
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context, limit *int, offset *int) ([]*model.User, error) {
	var users []*model.User

	if err := r.DB.NewSelect().Model(&users).Scan(context.Background()); err != nil {
		return nil, err
	}

	return users, nil
}
